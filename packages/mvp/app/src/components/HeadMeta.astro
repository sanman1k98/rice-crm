---
import { z } from 'astro/zod';

// TODO: create default OpenGraph image.

const SITE_NAME = 'Rice CRM';

const DEFAULTS = {
  LANG: 'en-US',
  OG_IMAGE: { file: '' },
  TWITTER: { site: undefined },
};

const basic = z.object({
  /** Language tag (BCP 47). */
  locale: z.string().default(DEFAULTS.LANG),
  /** Text to display in the browser tab. */
  title: z.string(),
  /** A description for creating a bookmark for the page. */
  description: z.string(),
  author: z.string().optional(),
});

const articleSchema = z.object({
  published_time: z.coerce.date(),
  modified_time: z.coerce.date(),
});

/** @see https://ogp.me */
const ogSchema = z.object({
  /** A more descriptive title used by the OpenGraph protocol. */
  title: z.string().optional(),
  /** A description of the page used by the OpenGraph protocol. */
  description: z.string().optional(),
  article: articleSchema.optional(),
  image: z.object({
    /** Path to an image file. */
    file: z.string(),
    /** Alt text for image. */
    alt: z.string().optional(),
  }),
});

// Twitter Cards will use OpenGraph images.
const twitterSchema = z.object({
  card: z.enum(['summary', 'summary_large_image']).default('summary_large_image'),
  /** Username for the website used in the card footer. */
  site: z.string().refine((str) => str.startsWith('@')).optional(),
  /** Username for the content creator or author. */
  creator: z.string().refine((str) => str.startsWith('@')).optional(),
});

const headMeta = basic.extend({
  og: ogSchema.default({ image: DEFAULTS.OG_IMAGE }),
  twitter: twitterSchema.default(DEFAULTS.TWITTER),
}).transform((data) => {
  const { og, twitter, ...basic } = data;
  return {
    ...basic,
    title: `${basic.title} | ${SITE_NAME}`,
    twitter,
    og: {
      ...og,
      type: og.article ? 'article' : 'website',
      title: og.title ?? basic.title,
      description: og.description ?? basic.description,
    },
  };
});

export type Props = z.input<typeof headMeta>;

const { title, description, og } = headMeta.parse(Astro.props);
---

<meta charset="utf-8" />
<meta name="generator" content={Astro.generator} />
<meta name="viewport" content="initial-scale=1, viewport-fit=cover" />

<title>{title}</title>
<meta name="description" content={description} />

<meta property="og:title" content={og.title} />
<meta property="og:description" content={og.description} />
<meta property="og:image" content={og.image.file} />
<meta property="og:type" content={og.type} />
